/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AdministrativeRole;

import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shree
 */
public class ManageUserAccountJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageUserAccountJPanel
     */
    private JPanel userProcessContainer;
    private JPanel container;
    private Enterprise enterprise;
    EcoSystem system;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    
    public ManageUserAccountJPanel(JPanel userProcessContainer, Enterprise enterprise, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.container = container;
        this.system = system;
        popOrganizationComboBox();
        popData();
    }

    public void popOrganizationComboBox() {
        organizationJComboBox.removeAllItems();

        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            organizationJComboBox.addItem(organization);
        }
        organizationJComboBox.setSelectedIndex(-1);
    }
    
    public void populateEmployeeComboBox(Organization organization){
        employeeJComboBox.removeAllItems();
        
        for (Employee employee : organization.getEmployeeDirectory().getEmployeeList()){
            if(organization.getEmployeeDirectory().getAssociatedEmployeeWithUser()==null || organization.getEmployeeDirectory().getAssociatedEmployeeWithUser().stream().noneMatch(em->em.equals(employee))){
                employeeJComboBox.addItem(employee);
            }
        }
        employeeJComboBox.setSelectedIndex(-1);
    }
    
    private void populateRoleComboBox(Organization organization){
        roleJComboBox.removeAllItems();
        for (Role role : organization.getSupportedRole()){
            roleJComboBox.addItem(role);
        }
        roleJComboBox.setSelectedIndex(-1);
        
    }

    public void popData() {

        DefaultTableModel model = (DefaultTableModel) userJTable.getModel();

        model.setRowCount(0);

        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            for (UserAccount ua : organization.getUserAccountDirectory().getUserAccountList()) {
                Object row[] = new Object[3];
                row[0] = ua;
                row[1] = ua.getRole();
                row[2] = organization;
                
                ((DefaultTableModel) userJTable.getModel()).addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        createUserJButton = new javax.swing.JButton();
        nameJTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userJTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        employeeJComboBox = new javax.swing.JComboBox();
        backjButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        organizationJComboBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        roleJComboBox = new javax.swing.JComboBox();
        passwordJTextField = new javax.swing.JPasswordField();
        BtnDeleteUsrAcc = new javax.swing.JButton();
        UpdateBtn = new javax.swing.JButton();
        BtnEdit = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1200, 850));
        setSize(new java.awt.Dimension(1200, 850));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        createUserJButton.setBackground(new java.awt.Color(0, 153, 255));
        createUserJButton.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        createUserJButton.setText("Create User");
        createUserJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createUserJButtonActionPerformed(evt);
            }
        });
        add(createUserJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 540, 140, 30));

        nameJTextField.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        add(nameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 420, 210, -1));

        jLabel1.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel1.setText("User Name");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 420, -1, 30));

        userJTable.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        userJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User Name", "Role", "Organization"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(userJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 20, 690, 230));

        jLabel2.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel2.setText("Password");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 460, -1, 30));

        jLabel3.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel3.setText("Employee");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 340, -1, 30));

        employeeJComboBox.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        employeeJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeeJComboBoxActionPerformed(evt);
            }
        });
        add(employeeJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 340, 210, -1));

        backjButton1.setBackground(new java.awt.Color(0, 153, 255));
        backjButton1.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        backjButton1.setText("<< Back");
        backjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButton1ActionPerformed(evt);
            }
        });
        add(backjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 110, 30));

        jLabel5.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel5.setText("Organization");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 300, -1, 30));

        organizationJComboBox.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        organizationJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationJComboBoxActionPerformed(evt);
            }
        });
        add(organizationJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 300, 210, -1));

        jLabel4.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        jLabel4.setText("Role");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 380, -1, 30));

        roleJComboBox.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        roleJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roleJComboBoxActionPerformed(evt);
            }
        });
        add(roleJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 380, 210, -1));
        add(passwordJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 460, 210, 30));

        BtnDeleteUsrAcc.setBackground(new java.awt.Color(0, 153, 255));
        BtnDeleteUsrAcc.setText("Delete User");
        BtnDeleteUsrAcc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDeleteUsrAccActionPerformed(evt);
            }
        });
        add(BtnDeleteUsrAcc, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 260, -1, -1));

        UpdateBtn.setBackground(new java.awt.Color(0, 153, 255));
        UpdateBtn.setText("Update User");
        UpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateBtnActionPerformed(evt);
            }
        });
        add(UpdateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 260, -1, -1));

        BtnEdit.setBackground(new java.awt.Color(0, 153, 255));
        BtnEdit.setText("Edit");
        BtnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEditActionPerformed(evt);
            }
        });
        add(BtnEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 20, -1, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/images/adopt_1200x850.jpg"))); // NOI18N
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 850));
    }// </editor-fold>//GEN-END:initComponents

    private void createUserJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createUserJButtonActionPerformed
        String userName = nameJTextField.getText();
        String password = String.valueOf(passwordJTextField.getPassword());
        if(userName.isEmpty() || password.isEmpty() || organizationJComboBox.getSelectedItem()==null || roleJComboBox.getSelectedItem()==null || employeeJComboBox.getSelectedItem()==null){
            JOptionPane.showMessageDialog(null, "Kindly provide complete login credentials!");
            return;
        }
        Organization organization = (Organization) organizationJComboBox.getSelectedItem();
        Employee employee = (Employee) employeeJComboBox.getSelectedItem();
        
        Role role = (Role) roleJComboBox.getSelectedItem();
        
        if(organization.getUserAccountDirectory().checkIfUsernameIsUnique(userName)){
            organization.getUserAccountDirectory().createUserAccount(userName, password, employee, role);
            organization.getEmployeeDirectory().addAssoiciatedEmployee(employee);
            dB4OUtil.storeSystem(system);
            popData();
            clearfields();
            employeeJComboBox.removeAllItems();
        }else{
            JOptionPane.showMessageDialog(null, "Username already Present! please enter a diffrent username");
        }
    }//GEN-LAST:event_createUserJButtonActionPerformed

    public void clearfields(){
        nameJTextField.setText("");
        passwordJTextField.setText("");
        organizationJComboBox.setSelectedIndex(-1);
        roleJComboBox.setSelectedIndex(-1);
        employeeJComboBox.setSelectedIndex(-1);
    }
    
    private void backjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButton1ActionPerformed
        
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backjButton1ActionPerformed

    private void organizationJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationJComboBoxActionPerformed
        Organization organization = (Organization) organizationJComboBox.getSelectedItem();
        if (organization != null){
            populateEmployeeComboBox(organization);
            populateRoleComboBox(organization);
        }
    }//GEN-LAST:event_organizationJComboBoxActionPerformed

    private void employeeJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeeJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_employeeJComboBoxActionPerformed

    private void roleJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roleJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roleJComboBoxActionPerformed

    private void BtnDeleteUsrAccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDeleteUsrAccActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel model = (DefaultTableModel) userJTable.getModel();
        int selectedRow = userJTable.getSelectedRow();
        if (selectedRow >= 0) {
            int selectionButton = JOptionPane.YES_NO_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(null, "Are you sure to delete?", "Warning", selectionButton);
            if (selectionResult == JOptionPane.YES_OPTION) {
                Organization organization  = (Organization) userJTable.getValueAt(selectedRow, 2);
                
                UserAccount useraccount = (UserAccount)userJTable.getValueAt(selectedRow, 0);               
                organization.getUserAccountDirectory().removeUserAccount(useraccount);
                popData();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row");
            
        }
    }//GEN-LAST:event_BtnDeleteUsrAccActionPerformed
Employee selectedEmployee;
UserAccount selecteduser;

    private void BtnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEditActionPerformed
        // TODO add your handling code here:
        int selectedRow = userJTable.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "please select a row");
        }else{
            UpdateBtn.setEnabled(true);
            selecteduser = (UserAccount)userJTable.getValueAt(selectedRow, 0);
            organizationJComboBox.setSelectedItem(userJTable.getValueAt(selectedRow, 2));
            roleJComboBox.setSelectedItem(userJTable.getValueAt(selectedRow, 1));   
            employeeJComboBox.setSelectedItem(selecteduser.getUsername());
            nameJTextField.setText(selecteduser.getUsername());
            passwordJTextField.setText(selecteduser.getPassword());
            
            UpdateBtn.setEnabled(true);
        }
       
    }//GEN-LAST:event_BtnEditActionPerformed

    private void UpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateBtnActionPerformed
        // TODO add your handling code here:
        
        String name = nameJTextField.getText();
                String pass = passwordJTextField.getSelectedText();

         
         //Employee employee = (Employee) organizationEmpJComboBox.getSelectedItem();


         
       
            Organization org = (Organization) organizationJComboBox.getSelectedItem();
                    DefaultTableModel model = (DefaultTableModel) userJTable.getModel();
                            int selectedRow = userJTable.getSelectedRow();
            if (selectedRow >= 0) {
            int selectionButton = JOptionPane.YES_NO_OPTION;
            int selectionResult = JOptionPane.showConfirmDialog(null, "Are you sure to update?", "Warning", selectionButton);
            if (selectionResult == JOptionPane.YES_OPTION) {
                Organization organization  = (Organization) userJTable.getValueAt(selectedRow, 2);
                System.out.println(organization);
                UserAccount user  = (UserAccount) userJTable.getValueAt(selectedRow, 0);
                System.out.println(user);

                user.setUsername(name);
               //user.setPassword(pass);

                UpdateBtn.setEnabled(false);
                nameJTextField.setText("");
                passwordJTextField.setText("");

               popData();

                JOptionPane.showMessageDialog(null, "update success");
            }
            
            else {
            JOptionPane.showMessageDialog(null, "Please select a row");
            
        }
            }
         
    }//GEN-LAST:event_UpdateBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnDeleteUsrAcc;
    private javax.swing.JButton BtnEdit;
    private javax.swing.JButton UpdateBtn;
    private javax.swing.JButton backjButton1;
    private javax.swing.JButton createUserJButton;
    private javax.swing.JComboBox employeeJComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JComboBox organizationJComboBox;
    private javax.swing.JPasswordField passwordJTextField;
    private javax.swing.JComboBox roleJComboBox;
    private javax.swing.JTable userJTable;
    // End of variables declaration//GEN-END:variables
}
